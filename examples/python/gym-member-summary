import datetime

from pytz import timezone
from seatable_api import Base, context, constants

SERVER_URL = "https://dev.seafile.com/dtable-web/"
API_TOKEN = "7010c3fde8a2639b385f2a3f258a5a27cbdfe1fb"

RAW_TABLE = "Table1"
RAW_TABLE_NAME = "名称"
RAW_TABLE_TIME = "创建时间"

COL_NAME = "标记"

HOUR_LIMIT_MAX = 21  # before 9pm
HOUR_LIMIT_MIN = 18  # after 6pm

TIMEZONE = "Asia/Shanghai"

def _format_time(time_str_utc):
    """
    Transfer the utc time string such as 2020-12-09T02:56:48.780+00:00 into localtime
    """
    try:
        n_time = datetime.datetime.strptime(time_str_utc, '%Y-%m-%dT%H:%M:%S.%f+00:00')
        utctime = datetime.datetime(n_time.year, n_time.month, n_time.day, n_time.hour, n_time.minute, n_time.second,
                                    tzinfo=timezone('UTC'))
        local_time = utctime.astimezone(timezone(TIMEZONE))
    except:
        return None
    return local_time.replace(tzinfo=None)


def pass_calculate():
    base = Base(API_TOKEN, SERVER_URL)
    base.auth()
    rows = base.list_rows(RAW_TABLE)

    # Create a new column to mark the invalid clock-in
    try:
        base.insert_column(RAW_TABLE, COL_NAME, constants.ColumnTypes.TEXT)
    except:
        pass

    res_dict = {}
    for row in rows:
        create_time = _format_time(row.get(RAW_TABLE_TIME))
        name = row.get(RAW_TABLE_NAME)
        time_list = res_dict.get(name) or []
        if create_time and create_time.hour in range(HOUR_LIMIT_MIN, HOUR_LIMIT_MAX):
            if create_time.date() in time_list:  # invalid clock-in more than one time within one day
                base.update_row(RAW_TABLE, row['_id'], {COL_NAME: '无效'})
            time_list.append(create_time.date())
            res_dict[name] = time_list
        else:
            base.update_row(RAW_TABLE, row['_id'], {COL_NAME: '无效'})


if __name__ == "__main__":
    pass_calculate()
